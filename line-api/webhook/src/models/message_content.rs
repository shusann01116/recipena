/*
 * Webhook Type Definition
 *
 * Webhook event definition of the LINE Messaging API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "type")]
pub enum MessageContent {
    #[serde(rename="audio")]
    AudioMessageContent {
        /// Message ID
        #[serde(rename = "id")]
        id: String,
    },
    #[serde(rename="file")]
    FileMessageContent {
        /// Message ID
        #[serde(rename = "id")]
        id: String,
    },
    #[serde(rename="image")]
    ImageMessageContent {
        /// Message ID
        #[serde(rename = "id")]
        id: String,
    },
    #[serde(rename="location")]
    LocationMessageContent {
        /// Message ID
        #[serde(rename = "id")]
        id: String,
    },
    #[serde(rename="sticker")]
    StickerMessageContent {
        /// Message ID
        #[serde(rename = "id")]
        id: String,
    },
    #[serde(rename="text")]
    TextMessageContent {
        /// Message ID
        #[serde(rename = "id")]
        id: String,
    },
    #[serde(rename="video")]
    VideoMessageContent {
        /// Message ID
        #[serde(rename = "id")]
        id: String,
    },
}

impl Default for MessageContent {
    fn default() -> Self {
        Self::AudioMessageContent {
            id: Default::default(),
        }
        
    }
}


