/*
 * Webhook Type Definition
 *
 * Webhook event definition of the LINE Messaging API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Event : Webhook event
#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "type")]
pub enum Event {
    #[serde(rename="accountLink")]
    AccountLinkEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="activated")]
    ActivatedEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="beacon")]
    BeaconEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="botResumed")]
    BotResumedEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="botSuspended")]
    BotSuspendedEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="deactivated")]
    DeactivatedEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="delivery")]
    PnpDeliveryCompletionEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="follow")]
    FollowEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="join")]
    JoinEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="leave")]
    LeaveEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="memberJoined")]
    MemberJoinedEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="memberLeft")]
    MemberLeftEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="membership")]
    MembershipEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="message")]
    MessageEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="module")]
    ModuleEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="postback")]
    PostbackEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="things")]
    ThingsEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="unfollow")]
    UnfollowEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="unsend")]
    UnsendEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
    #[serde(rename="videoPlayComplete")]
    VideoPlayCompleteEvent {
        #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
        source: Option<Box<models::Source>>,
        /// Time of the event in milliseconds.
        #[serde(rename = "timestamp")]
        timestamp: i64,
        #[serde(rename = "mode")]
        mode: models::EventMode,
        /// Webhook Event ID. An ID that uniquely identifies a webhook event. This is a string in ULID format.
        #[serde(rename = "webhookEventId")]
        webhook_event_id: String,
        #[serde(rename = "deliveryContext")]
        delivery_context: Box<models::DeliveryContext>,
    },
}

impl Default for Event {
    fn default() -> Self {
        Self::AccountLinkEvent {
            source: Default::default(),
            timestamp: Default::default(),
            mode: Default::default(),
            webhook_event_id: Default::default(),
            delivery_context: Default::default(),
        }
        
    }
}


