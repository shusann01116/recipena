/*
 * Webhook Type Definition
 *
 * Webhook event definition of the LINE Messaging API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BeaconContent {
    /// Hardware ID of the beacon that was detected
    #[serde(rename = "hwid")]
    pub hwid: String,
    /// Type of beacon event.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// Device message of beacon that was detected.
    #[serde(rename = "dm", skip_serializing_if = "Option::is_none")]
    pub dm: Option<String>,
}

impl BeaconContent {
    pub fn new(hwid: String, r#type: Type) -> BeaconContent {
        BeaconContent {
            hwid,
            r#type,
            dm: None,
        }
    }
}
/// Type of beacon event.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "enter")]
    Enter,
    #[serde(rename = "banner")]
    Banner,
    #[serde(rename = "stay")]
    Stay,
}

impl Default for Type {
    fn default() -> Type {
        Self::Enter
    }
}

